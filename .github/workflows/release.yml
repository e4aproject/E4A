# This is the single source of truth for releasing packages to PyPI and NPM.
# It uses OIDC for tokenless authentication with PyPI, which is the industry best practice.
name: Release E4A Packages

on:
  release:
    types: [published]

jobs:
  publish-pypi:
    name: Publish Python package to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for OIDC
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-npm:
    name: Publish TypeScript/JS package to NPM
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Required for OIDC
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies and publish
        # This step assumes a package.json.
        run: |
          # If your npm package is not at the root, add 'cd your-package-dir' here
          # npm ci
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # NPM still requires a token for now
