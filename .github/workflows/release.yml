name: Release & Publish (npm + PyPI via OIDC)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write  # required for OIDC

jobs:
  release:
    name: Release npm + PyPI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # required for semantic-release

      # -------------------------------
      # NODE.JS RELEASE (npm via OIDC)
      # -------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
          scope: '@e4aproject'
          always-auth: true  # OIDC-compatible
          token: ${{ secrets.GITHUB_TOKEN }}  # GitHub OIDC will derive this

      - run: npm ci

      - name: Semantic Release (npm via OIDC)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      # -------------------------------
      # VERSION SYNC (npm â†’ Python)
      # -------------------------------
      - name: Sync version to Python
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Synced version: $VERSION"
          sed -i "s/^version = .*/version = \"$VERSION\"/" pyproject.toml

      # -------------------------------
      # PYTHON RELEASE (PyPI via OIDC)
      # -------------------------------
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build and Check Python Package
        run: |
          python -m pip install --upgrade build twine check-wheel-contents
          python -m build
          python -m twine check dist/*
          check-wheel-contents dist/*.whl

      - name: Publish to PyPI via OIDC
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true
